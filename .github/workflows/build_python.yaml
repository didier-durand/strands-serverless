name: 'build Python code'

on:

  workflow_dispatch:  # manual triggering

  push:
    paths:
      - '.github/workflows/build_python.yaml'
      - '.coveragerc'
      - 'requirements.txt'
      -  'pylint.config'
      - 'src/**'
      - 'test/**'

jobs:

  build_python:

    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        python-version: ["3.12"]

    env:
      MCP_GITHUB_PAT: ${{ secrets.MCP_GITHUB_PAT }}

    steps:

    - name: checkout code from repo
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: prelude
      run: |
          # sudo apt-get update -y
          # sudo apt-get upgrade -y
          docker --version
          docker image ls
          python --version

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade pylint
        pip install -r requirements.txt

    - name: checking syntax of scripts
      run: |
        python -m py_compile $(git ls-files '*.py')

    - name: analysing the code quality with pylint
      run: |
        pylint --version
        pylint --rcfile=./pylint.config src
        
    - name: Running all tests
      run: |
        echo "pwd: $(pwd)"
        ls -1 -alh
        #
        printenv
        #
        export PYTHONPATH="$(pwd)/src:$(pwd)/test":$PYTHONPATH
        echo "PYTHONPATH:" $PYTHONPATH
        #
        # pytest --cov=./ --cov-report=term --cov-config=.coveragerc
        pytest --cov=./ --cov-report=xml:cov-report.xml --cov-report=term --cov-config=.coveragerc
        # cat cov-report.xml

#    - name: Upload coverage reports to Codecov
#      uses: codecov/codecov-action@v4.0.1
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        fail_ci_if_error: true
#        verbose: true